*/ Task 1: Create a React Component Using JSX (5 Points)
Create a functional component called Greeting that:

Uses JSX to return an <h1> element displaying a greeting message (e.g., "Hello, Welcome to React!").
Includes a paragraph <p> with an inline style applied using JSX.
Uses JavaScript expressions inside JSX (e.g., displaying the current date dynamically).

/*

function IsEven(number) {
  return number % 2 === 0;
};

function Greeting() {
  const number = 100;
  return (
    <div>
      <h1>Hello Assignment 1</h1>
      <p style={{color: "red"}}>Is 100 an even number?: {isEven(number) ? "Yes" : "No"}</p>
    </div>
   );
};


*/ Task 2: Create a Class Component and Use JSX (5 Points)
Create a class-based component named UserInfo that:

Uses JSX to return a <div> containing a user's name and profession.
Defines state inside the component to hold user details.
Displays a random number inside JSX (e.g., "Your lucky number is 7").

/*

function UserName({name}) {
  return <h2>Name: {name}</h2>;
}

function UserJob({job}) {
  return <h3>Job: {job}</h3>;
};

class UserInfo extends React.Component {
  constructor(props) {
    super(props);
      this.state = {yournumber: Math.random()};
  }

  render() {
    const {name, job} = this.props;
    const {yournumber} = this.state;


    return (
      <div>
        <UserName name={name} />
        <UserJob job={job} />
        <p>Employee Number: {yournumber}</p>
      </div>
    );
  }
}

*/ Task 3: Dynamic Content Using JSX and React Components (5 Points)

Create an array of tasks inside the App component.
Write a function getRandomTask() that returns a random task from the list.
Display a random task inside a <h3> using JSX.

/*

function App () {
  const tasks = [
    "Read",
    "Shop",
    "Laundry"
  ];

  return (
    <div>
      {getRandomTask(tasks)}
    </div>
  );

}

function getRandomTask(tasks) {
  const randomIndex = Math.floor(Math.random() * tasks.length);
  const randomTask = tasks[randomIndex];

  return (
    <div> 
      <h3> {randomTask} </h3>
    </div>
  );
}


*/ Task 4: Parent and Child Components Using JSX (5 Points)
Modify App.js to:

Import the Greeting, UserInfo, and TaskComponent components.
Render them inside a single <div> (following JSX rules).
/*




